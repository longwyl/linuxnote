---------------------------------------------------------------------------------
			SUID ，SGID , STICKY
---------------------------------------------------------------------------------
安全上下文：
	1.进程以某用户的身份运行，进程是发起此进程的用户的代理，因此以此用户的身份和权限完成所有操作;
	2.权限匹配模型
		（1）判断进程的属主，是否为被访问文件的属主;如果是， 则应用属主权限，否则进入第二步
		（2）判断进程的属主，是否属于被访问文件的数组，如果是，则应用数组的权限否则进入第三步
		（3）应用other的权限;
---------------------------------------------------------------------------------
				SUID: 
---------------------------------------------------------------------------------
	默认情况下;用户发起进程，进程的属主是其发起;因此，其以发起者的身份在运行
	SUID的作用：用户运行某程序是，如果此程序拥有SUID权限，那么程序运行时，进程的属主不再是发起者，而是文件自己的属主

管理文件的SUID权限：
	chmod u+|- file...
	展示位置：属主的执行权限位
		如果属主原来由执行权限，显示为小写s：
		否则显示为大写S;
---------------------------------------------------------------------------------
				SGID:
---------------------------------------------------------------------------------
	功用：当前目录属组有写权限， 且由SGID 权限是，那么所有属于次目录的属组，且以属组的身份再次目录中新建文件或目录是，新文件的属组不再是用户的基本组，而是此目录的数组;	
STICKY:
	功用：对于属组或全局可写的目录， 组内的所有用户或系统上的所有用户
都能在此目录中创建或是删除文件;如果设置了sticky权限，则每个用户能创建文件但是只能删除自己的文件;
	管理文件的sticky权限：
	chmod o+|-t file...

管理特殊权限的另一种方式：
	suid sgid sticy
		0 0 0 0
		0 0 1 1
		0 1 0 2
		...
基于八进制方式赋权时，可与默认的三位八进制数字左侧再加一位八进制数字
	例如： chmod 1777	

---------------------------------------------------------------------------------
			文件的额外权限控制机制
			访问控制列表
---------------------------------------------------------------------------------
	在原来ugo之外，另一层让普通用户能控制赋权给另外的用户或组的机制
		getfacl file
			user:USERNAME:MODE
			group:GROUPNAME:MODE
		setfacl 命令
			赋权给用户：
				setfacl -m u:USERNAME:MODE FILE...
			赋权给组：
				setfacl -m g:GROUPNAME:MODE FILE...	
			撤销赋权：
				setfacl -x u:USERNAME FILE...
				setfacl -x g:GROUPNAME FILE...

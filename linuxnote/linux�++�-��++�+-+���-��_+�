------------------------------------------------------------------------------
linux的哲学思想：一切皆文件
------------------------------------------------------------------------------
设备类别
  块（block）：随机访问，数据交换单位是"块"
  字符（character）: 线性访问，数据交换单位是”字符“
------------------------------------------------------------------------------
设备文件：FHS
	/dev
		设备文件：作用是关联至设备的驱动程序;用于识别设备的访问入口
			设备号： 	
				major：主设备号，区分设备类型，用于表明设备所需要的驱动程序：
				minor：次设备号，区分同种类型下的不同设备;是特定的设备的访问入口;

		mknod命令：
			make block or character special files 
			mknod [OPTION]... NAME TYPE [MAJOR MINOR]
			-m MODE: 创建后的设备文件的访问权限
------------------------------------------------------------------------------
	磁盘：
		IDE： /dev/hd[a-z]
		SCSI, SATA,USB,SAS: /dev/sda[a-z]
	分区：
		/dev/sda#：
			/dev/sda[1-9]
	引用设备的方式
		设备文件名
		卷表
		UUID
------------------------------------------------------------------------------
磁盘分区：MBR,GPT
 	MBR: 0 sector
 		MASTER BOOT REcord
 	分为三个部分：
		446bytes：bootloader， 程序，引导启动操作系统的程序：
		64bytes： 分区表，每16bytes标识一个分区
		2bytes：MBR 区域的有效性标识：55AA表示有效：
	主分区和扩展分区的标识：1-4
	逻辑分区：5+
------------------------------------------------------------------------------
fdisk命令：
1.查看磁盘的分区信息：
        fdisk -l [device...]
2.管理分区：
	fdisk [options] device
  	常用命令：
		n：
		d：
		t：修改分区类型
		l：
		w：
		q：

note : 在已经分区并且已经挂载其中某个分区的磁盘设备上创建的分区，内核可能在创建完成后无法直接识别。
	查看： cat /proc/partitions
	通知内核强制重读磁盘分区表：
		centos5 ： partprobe [device]
		centos6,7 partx,kpartx
			partx -a [device]
			kaprtx -af [device]
	分区创建工具：parted， sfdisk;
------------------------------------------------------------------------------
创建文件系统：
文件系统的组织结构中的术语：
block groups, block, inode talbe, inode, inode bitmap, blokc bitmap,superlbock
	格式化：低级格式化（在分区之前进行，划分磁道）	
		高级格式化（分区之后进行，创建文件系统）
		
	元数据区，数据区：
		元数据区：
			文件元数据：inode（index node)
				大小，权限，属主属组，时间戳，数据块指针
		数据区：
			note:数据区有一块预留空间供超级管理员使用;
			 数据区中有一块空间用于元数据和数据块索引，位图索引，用一位二进制数表示是否空闲;

------------------------------------------------------------------------------
	链接文件：存储数据指针的空间中村的是真是文件的访问路径
	设备文件：存储数据指针的空间中存储的是设备号（major ，minor)
虚拟文件系统：vfs
linux的文件系统：ext2,ext3，ext4,xfs，reiserfs，btrfs，
光驱：iso9660
网络文件系统：nfs，cifs，
集群文件系统：gfs2， ocfs2
内核级分布式文件系统：ceph
windows的文件系统：vfa，ntfs，
伪文件系统：proc ,sysfs, tmpfs hugepagefs
unix的文件系统:UFS,FFs,JFs
交换文件系统：swap
用户空间的分布式文件系统：mogilefs, moosefs,glusterfs

------------------------------------------------------------------------------
				文件系统管理工具
------------------------------------------------------------------------------
	 创建文件系统：mkfs
		mkfs.ext , mkfs.ext3 , mkfs.ext4 ,mkfs.xfs .mkfs.vfat
	 检测及修复文件系统工具：fsck
		fsck.ext2 ,fsck,ext3,...
	 查看其属性的工具：
	 	dumpe2fs,tune2fs
	 调整文件系统的特性：
		tune2fs

------------------------------------------------------------------------------
				链接文件
------------------------------------------------------------------------------
	硬链接：指向同一个inode的多个文件路径：
		特性：
			1.目录不支持硬链接：
			2.不能跨文件系统：
			3.创建硬链接会增加inode引用计数;
		ln src link_file
	符号链接（软链接）：指向一个文件路径的另一个文件路径
		特性：
			1.符号链接与文件是连个各自独立的文件，各由自己的inode;
			2.支持对目录创建符号链接，可以跨文件系统;
			3.删除符号链接文件不影响元文件;但是删除源文件，符号链接指定的路径不存在，此时会变成无效链接;
		ln -s src link_file

------------------------------------------------------------------------------
文件系统管理工具：
	内核级文件系统的组成部分：
		文件系统驱动:由内核提供;
		文件系统管理工具：由用户空间的应用程序提供;

------------------------------------------------------------------------------
			ext系列文件系统的创建工具
------------------------------------------------------------------------------
	mkfs.ext2（没有日志功能）,mkfs.ext3, mkfs.ext4（建议）
	mkfs -t ext2 = mkfs.ext2
	ext 系列文件系统的专用管理工具：mke2fs
		mke2fs [OPTIONS] device 
			-t {ext2|ext3|ext4} :指明要创建的文件系统的类型;
			-b {1024|2048|4096} :指明块大小
			-L LABEL : 指明卷标;
			-j:创建具有日志功能的文件系统ext3
				mke2fs -j = mke2fs -t ext3 = mkfs -t ext3=mkfs.ext3
			-i:bytes-per-inode 指明多少个字节创建一个inode
			-N : 直接指明要给此文件系统创建的inode的数量;
	卷标的查看与设定：
		查看：e2label device
		设定：e2label device LABEL
	tune2fs命令：查看或修改ext系列文件系统的某些属性：
		ｎｏｔｅ：块大创建后不可修改
		-l：查看超级块的内容：
		-j：ext2->ext3
		-L LABEL:写该卷标
		-m : 调整预留给管理员空间的百分比
		-O[^] FEATHER : 开启或关闭某种特性：		
		-o[^] mount_options : 开启或是关闭某种默认挂载选项：
			常用来创建acl
				example:{
						tune2fs -o acl /dev/sda#
						tune2fs -l /dev/sda#
						mount /dev/sda# dir
						setfacl -m u:fedora:rw- fstab
						getfacl fstab
   					}
	dumpe2fs命令：显示ｅｘｔ系列文件系统的属性信息
		dumpe2fs [-h] device 
	fsck命令：用于实现文件系统检测的工具
		因进程意外终止或是系统崩溃等原因导致操作非正常终止时，可能会遭成文件损坏，　此时，因该检测并修复文件系统；
	e2fsck ：ext 文件系统专用的检测工具；
		－ｙ：　对所有问题自动回答尾ｙｅｓ；　
		－ｆ：　即使文件系统处于ｃｌｅａｎ状态，也要进行检测
        fsck :check and repair linux filesystem 通用工具
		－ｔ：　ｆｉｌｅｓｙｓｔｅｍｔｙｐｅ
		-a :自动修复
		－ｒ：交互式修复
		
Centos 6 如何使用xfs文件系统
	#yum -y install xfsprogs
	

blkid　：command-line utility to locate / print block devide attributes
		
		
------------------------------------------------------------------------------
				swapｗ文件系统：
------------------------------------------------------------------------------
	ｌｉｎｕｘ上的交换分区必须使用独立的文件系统：
	且文件系统的ｓｙｓｔｅｍｉｄ必须尾页：
	
	创建ｓｗａｐ分区由专门的命令：
	mkswap
		-L LABEL :指明卷标
		－ｆ：强制
启用swap分区
	swapon /dev/sda#
	-a: 定义在/etc/fstab文件中的所有swap 设备：
禁用swap分区：
	swapoff

------------------------------------------------------------------------------
ｎｏｔｅ：windows 无法识别ｌｉｎｕｘ的文件系统；因此，存储设备需要两种系统之间交叉使用时，　应该使用ｗｉｎｄｏｗｓ和ｌｉｎｕｘ同时支持的文件系统ｆａｔ３２（ｄｅｆａｕｌｔ）

------------------------------------------------------------------------------
		文件系统的使用首先要挂载：使用mount命令
------------------------------------------------------------------------------
	命令选项：
		-a:可自动挂载定义在/etc/fstab文件中的所支持自动挂载的设备：
		-r：readonlyg,只读挂载:
		-w:read and write,
		-n : 默认情况下，设备挂载或是卸ｄ操作会同步更新至/etc/mtab文件中；-n禁用次特性：
		-t vfstype:指明要挂载的设备上的文件系的类型；多数情况下可省略,此时mount会通过blkid 来判断要挂载的设备的文件系统类型；
		-L LABEL: 以卷标的方式指明设备；		
　　		-U UUID: 以UUID 的方式指明设备中；mount -u UUID dir 
	-o options:挂载选项
		sync/async:同步／异步操作；
		atime/noatime:文件或是在目录被访问是更新其访问时间戳；			   diratime/nodiratime:目录在被访问是是否更新其访问时间戳
		remount:mount -o remount,acl /dev/sda* /mnt
		acl:支持使用facl功能
			#mount -o acl devide dir 
			#tune2fs -o acl device 
		ro:readonly 
		rw:writeonly
		/dev/nodev:次设备上是否允许创建设备文件；
		exec/noexec:是否允许运行次设备上的程序文件：
		auto/noauto :
		user/nouser:
		suid/nosuid:是否允许程序文件上的ｓｕｉｄ和ｓｇｉｄ特殊权限生效
		defaults: Use default optinos: rw, suid, dev,exec,auto,nouser,async,and relatime.
　
------------------------------------------------------------------------------
NOTE:可以实现将一个目录挂载到另一个目录上：
		mount --bind srcdir targetdir
查看当先系统上所有已经挂载的设备：
	mount
	cat /etc/mtab
	cat /proc/mouts
挂载光盘：	
	mount -r /dev/cdrom mount_point

umount的时候如果发现设备繁忙：
	可以使用以下命令查看器是那个用户那个进程在占用设备
		lsof /mnt
		fuser -v /mnt
		fuser -km /mnt
------------------------------------------------------------------------------


如何挂载本地的回环设备
mount -o loop /PATH/OT/SOME_LOOP_FILE MOUNT_POINT

------------------------------------------------------------------------------
设定除根文件系统以外的其它文件系统开机时自动挂载：/etc/fstab文件
	每行ｄｉｇｙｉ一个要挂在的文件系统及相关属性：
	六个字段：
		１.要挂载的设备：
			设备文件：LABEL , UUID 伪文件系统如：sysfs, proc,tmpfs
		2.挂载点
			swap类型的设备挂载点为swap
		3.文件系统类型
		4.挂载选项
			defaults:使用默认挂载选项
			如果要同时指明多个挂载选项，彼此间以逗号分割即可；
				example : defaults, acl, noatime, noexec
		5.转储频率
			０：从不备份
			１：每天备份
			２：每隔一天备份
		６自检次序：
			０：不自检
			１：首先自检，通常只能是根文件系统可用１：
			２：次级自检
			。。。

------------------------------------------------------------------------------
df命令：
	df [OPTION]... [FILE]...
	-l:仅显示本地
	-h:
	-i:显示的使用状态而非blocks
du命令：
	-h human-readable
	-s :summary

